<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
        
    <context:component-scan base-package="com.spring.*"/>
    
	<aop:aspectj-autoproxy />
	<context:property-placeholder location="classpath:application.properties"/>
	<!-- Bean declarations go here -->

	<bean id="sonnet29" class="com.spring.impl.Sonnet29" />

	<!-- Bean with constructor inj with integer arg -->
	<!-- <bean id="juggler" class="com.spring.impl.Juggler">
		<constructor-arg value="5" />
	</bean> -->

	<!-- Bean with Constructor injection with integer argument and reference 
		to another bean -->
	<bean id="poeticJuggler" class="com.spring.impl.PoeticJuggler">
		<constructor-arg value="15" />
		<constructor-arg ref="sonnet29" />
	</bean>

	<!-- Bean with factory-method attribute -->
	<bean id="stage" class="com.spring.impl.Stage" factory-method="getInstance" />

	<!-- Bean with init and destroy methods -->
	<bean id="auditorium" class="com.spring.impl.Auditorium"
		init-method="init" destroy-method="destroy" />

	<!-- Bean with Setter injection using <property> element with String argument 
		and reference to bean -->
	<bean id="instrumentalist" class="com.spring.impl.Instrumentalist">
		<property name="song" value="Jingle Bells" />
		<property name="instrument" ref="piano" />
	</bean>

	<bean id="piano" class="com.spring.impl.Piano" />

	<!-- Bean with inner bean -->
	<bean id="kenny" class="com.spring.impl.Instrumentalist">
		<property name="song" value="Twinkle Twinkle Little Star" />
		<property name="instrument">
			<bean class="com.spring.impl.Saxophone" />
		</property>
	</bean>

	<bean id="guitar" class="com.spring.impl.Guitar" />
	<bean id="saxophone" class="com.spring.impl.Saxophone" />

	<!-- Bean with wiring Collections -->
	<bean id="oneManBandList" class="com.spring.impl.OneManBand">
		<property name="multipleInstrument">
			<list>
				<ref bean="saxophone" />
				<ref bean="guitar" />
				<ref bean="piano" />
				<ref bean="guitar" />
			</list>
		</property>
	</bean>
	<bean id="oneManBandSet" class="com.spring.impl.OneManBand">
		<property name="multipleInstrument">
			<set>
				<ref bean="saxophone" />
				<ref bean="piano" />
				<ref bean="piano" />
			</set>
		</property>
	</bean>
	<bean id="oneManBandMap" class="com.spring.impl.OneManBandWithMap">
		<property name="instruments">
			<map>
				<entry key="Piano" value-ref="piano" />
				<entry key="Guitar" value-ref="guitar" />
				<entry key="Saxophone" value-ref="saxophone" />
			</map>
		</property>
	</bean>

	<!-- AOP Configuration -->
	<bean id="aspect" class="com.spring.impl.Audience" />
	<bean id="magician" class="com.spring.impl.Magician" />
	<bean id="thinker" class="com.spring.impl.Volunteer" />
	<bean id="introduction" class="com.spring.impl.GraciousContestent" />

	<!-- <aop:config>
		<aop:aspect ref="aspect">
			<aop:pointcut id="pointcut"
				expression="execution(* com.spring.intf.Performer.perform(..)) and within(com.spring.impl.*)" />
			<aop:before pointcut-ref="pointcut" method="takeSeats" />
			<aop:before pointcut-ref="pointcut" method="switchOffCells" />
			<aop:after-returning pointcut-ref="pointcut"
				method="applaud" />
			<aop:after-throwing pointcut-ref="pointcut"
				method="refund" />
			<aop:around pointcut-ref="pointcut" method="watchPerformance" />
		</aop:aspect>
		<aop:aspect ref="magician">
			<aop:pointcut
				expression="execution(* com.spring.intf.Thinker.thinkOfSomething(String)) and within(com.spring.impl.*) and args(thoughts))"
				id="magicPC" />
			<aop:before pointcut-ref="magicPC" method="interceptThoughts"
				arg-names="thoughts" />
		</aop:aspect>
		<aop:aspect>
			<aop:declare-parents types-matching="com.spring.intf.Performer+"
				implement-interface="com.spring.intf.Contestent" delegate-ref="introduction" />
		</aop:aspect>
	</aop:config> -->
	
	<!-- Hibernate Integration -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}"/>
		<property name="JdbcUrl" value="${c3p0.jdbcUrl}"/>
		<property name="user" value="${c3p0.user}"/>
		<property name="password" value="${c3p0.password}"/>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
		<property name="maxStatements" value="${c3p0.maxStatements}"/>
		<property name="unreturnedConnectionTimeout" value="${c3p0.unreturnedConnectionTimeout}"/>
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
		<property name="preferredTestQuery" value="${c3p0.preferredTestQuery}"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframeword.orm.hibernate3.LocalSessionFactoryBean">
	   <property name="dataSource" ref="dataSource"/>
	   <property name="mappingResources">
	       <list>
	           <value></value>
	       </list>
	   </property>
	   <property name="hibernateProperties">
	       <props>
	           <prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
	       </props>
	   </property>
	</bean>
	
	<bean id="sessionFactoryAnnotated" class="org.springframeword.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
       <property name="dataSource" ref="dataSource"/>
       <property name="packagesToScan">
               <value>com.spring.hibernate.*</value>
       </property>
       <property name="hibernateProperties">
           <props>
               <prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
           </props>
       </property>
    </bean>

</beans>
